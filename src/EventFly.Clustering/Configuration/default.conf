####################################################
# EventFly Cluster Sharding Default Config File #
####################################################

# This is the reference config file that contains all the
# default settings for EventFly in cluster sharding
# and the descriptions of each. Make your edits/overrides 
# in your applications hocon config

akka {
	log-config-on-start = off
	loglevel = INFO
	stdout-loglevel = INFO
	actor {
		
		provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"

		serializers {
			json = "Akka.Serialization.NewtonSoftJsonSerializer"
			akka-sharding = "Akka.Cluster.Sharding.Serialization.ClusterShardingMessageSerializer, Akka.Cluster.Sharding"
			akka-cluster = "Akka.Cluster.Serialization.ClusterMessageSerializer, Akka.Cluster"
		}

		serialization-bindings {
			"Akka.Cluster.Sharding.IClusterShardingSerializable, Akka.Cluster.Sharding" = akka-sharding 
            "Akka.Cluster.IClusterMessage, Akka.Cluster" = akka-cluster
	        "Akka.Cluster.Routing.ClusterRouterPool, Akka.Cluster" = akka-cluster
		}

		serialization-identifiers {
            "Akka.Cluster.Sharding.Serialization.ClusterShardingMessageSerializer, Akka.Cluster.Sharding" = 13
            "Akka.Cluster.Serialization.ClusterMessageSerializer, Akka.Cluster" = 5
        }
	}

	cluster {
		name = "EventFly"
		log-info = on
		publish-stats-interval = 3s
		gossip-time-to-live = 4s
		heartbeat-interval = 5s
		threshold = 15.0
		min-std-deviation = 500 ms
		acceptable-heartbeat-pause = 15s
		sharding.remember-entities = off
	}

	remote {	
		log-remote-lifecycle-events = INFO
		log-received-messages = on
		retry-gate-closed-for = 15s
		
		dot-netty {	
			maximum-frame-size = 256000b
			
			tcp {
				transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
				transport-protocol = tcp
			}
			
		}

		transport-failure-detector {	
			heartbeat-interval = 4s
			acceptable-heartbeat-pause = 20s	
		}

		watch-failure-detector {	
			heartbeat-interval = 4s
			acceptable-heartbeat-pause = 20s	
		}

	}

}


